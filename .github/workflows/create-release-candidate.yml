name: Create Pre-Release

on:
  push:
    branches:
      - release/*

jobs:
  release-candidate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Bump version and create tag
      id: create_tag
      run: |
        # Extract version from branch name
        VERSION=$(echo ${GITHUB_REF##*/} | grep -oP '\d+\.\d+\.\d+')
        RC_PREFIX="rc"
        
        # Get the latest RC number for this version
        LATEST_RC=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                  "https://api.github.com/repos/${GITHUB_REPOSITORY}/git/refs/tags" | \
                  jq -r '.[] | select(.ref | contains("'"${VERSION}-${RC_PREFIX}"'"))' | \
                  jq -r .ref | sed 's/.*rc//g' | sort -rn | head -n 1)

        # If there were no previous RCs for this version, start at 1, otherwise increment
        if [ -z "$LATEST_RC" ]; then
          RC_NUM=1
        else
          RC_NUM=$((LATEST_RC + 1))
        fi

        # Create the new tag
        NEW_TAG="v${VERSION}-${RC_PREFIX}${RC_NUM}"
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
        git tag $NEW_TAG
        
        # Expose RC_NUM
        echo "RC_NUM=$RC_NUM" >> $GITHUB_ENV

    - name: Push tag
      run: |
        git push origin ${{ env.NEW_TAG }}
        
    - name: Create Pre Release on Github
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
      with:
        tag_name: ${{ env.NEW_TAG }}
        release_name: ${{ env.NEW_TAG }} Release Candidate (${{ env.RC_NUM }})
        draft: false
        prerelease: true
